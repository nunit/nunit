trigger:
  branches:
    include: [ '*' ]
#
jobs:

- job: Windows
  pool:
    vmImage: vs2017-win2016
  steps:

  - powershell: .\build.ps1 --target=Test
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net45 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\net45\*.xml
      mergeTestResults: true
      testRunTitle: net45/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net40 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\net40\*.xml
      mergeTestResults: true
      testRunTitle: net40/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\net35\*.xml
      mergeTestResults: true
      testRunTitle: net35/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\netcoreapp1.1\*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/Windows
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.0 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results\netcoreapp2.0\*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.0/Windows
    condition: succeededOrFailed()

  - powershell: .\build.ps1 --target=Package --artifact-dir='$(Build.ArtifactStagingDirectory)'
    displayName: Package

  - task: PublishBuildArtifacts@1
    displayName: Save package artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: Package

- job: Linux
  pool:
    vmImage: ubuntu-16.04
  steps:

  - bash: ./build.sh --target=Test --configuration=Release
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net45 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net45/*.xml
      mergeTestResults: true
      testRunTitle: net45/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net40 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net40/*.xml
      mergeTestResults: true
      testRunTitle: net40/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net35/*.xml
      mergeTestResults: true
      testRunTitle: net35/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp1.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/Linux
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.0 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp2.0/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.0/Linux
    condition: succeededOrFailed()

- job: macOS
  pool:
    vmImage: macOS-10.13
  steps:

  - bash: ./build.sh --target=Test --configuration=Release
    displayName: Build and test

  # Workaround for https://github.com/nunit/nunit/issues/3012#issuecomment-441517922
  - task: PublishTestResults@2
    displayName: Publish net45 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net45/*.xml
      mergeTestResults: true
      testRunTitle: net45/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net40 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net40/*.xml
      mergeTestResults: true
      testRunTitle: net40/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish net35 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/net35/*.xml
      mergeTestResults: true
      testRunTitle: net35/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp1.1 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp1.1/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp1.1/macOS
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    displayName: Publish netcoreapp2.0 test results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: test-results/netcoreapp2.0/*.xml
      mergeTestResults: true
      testRunTitle: netcoreapp2.0/macOS
    condition: succeededOrFailed()
