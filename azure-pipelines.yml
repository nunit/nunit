trigger:
  branches:
    include: [ '*' ]
    exclude: [ 'refs/tags/*' ]

jobs:

- job: Windows
  pool:
    vmImage: windows-latest
  steps:

  - powershell: .\build.ps1 --target=Test --test-run-name=Windows
    displayName: Build, test, and publish results

  - powershell: .\build.ps1 --target=Package --artifact-dir='$(Build.ArtifactStagingDirectory)'
    displayName: Package

  - task: PublishBuildArtifacts@1
    displayName: Save package artifacts
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: Package

  - task: PublishBuildArtifacts@1
    displayName: Save test results artifacts
    condition: always()
    inputs:
      PathtoPublish: test-results
      ArtifactName: Test results (Windows)

- job: Linux
  pool:
    vmImage: ubuntu-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      useGlobalJson: true
      
  - task: UseDotNet@2
    displayName: 'Install .NET Core runtime 2.1'
    inputs:
      packageType: runtime
      version: 2.1.x

  - bash: sudo apt-get install fsharp
    displayName: Install F# for Mono

  - bash: |
     dotnet tool install --global Cake.Tool
     dotnet cake --target=Test --test-run-name=Linux --configuration=Release
    displayName: Build, test, and publish results

  - task: PublishBuildArtifacts@1
    displayName: Save test results artifacts
    condition: always()
    inputs:
      PathtoPublish: test-results
      ArtifactName: Test results (Linux)

- job: macOS
  pool:
    vmImage: macOS-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK'
    inputs:
      useGlobalJson: true
      
  - task: UseDotNet@2
    displayName: 'Install .NET Core runtime 2.1'
    inputs:
      packageType: runtime
      version: 2.1.x

  - bash: |
     curl -o mono.pkg -sSL https://download.mono-project.com/archive/6.4.0/macos-10-universal/MonoFramework-MDK-6.4.0.198.macos10.xamarin.universal.pkg
     sudo installer -pkg mono.pkg -target /
    displayName: Install Mono 6.4.0

  - bash: |
     dotnet tool install --global Cake.Tool
     dotnet cake --target=Test --test-run-name=macOS --configuration=Release
    displayName: Build, test, and publish results

  - task: PublishBuildArtifacts@1
    displayName: Save test results artifacts
    condition: always()
    inputs:
      PathtoPublish: test-results
      ArtifactName: Test results (macOS)
